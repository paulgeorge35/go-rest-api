basePath: /api
definitions:
  response.ErrorResponse:
    description: Error response with a message
    properties:
      error:
        example: invalid request
        type: string
    type: object
  response.HealthResponse:
    description: Health check response with status
    properties:
      status:
        example: ok
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  response.SuccessResponse:
    description: Success response with optional message and data
    properties:
      data: {}
      message:
        example: operation successful
        type: string
    type: object
  response.UserResponse:
    description: User profile information
    properties:
      email:
        example: user@example.com
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
      name:
        example: John Doe
        type: string
    type: object
  validator.ForgotPasswordRequest:
    properties:
      email:
        example: user@example.com
        type: string
    required:
    - email
    type: object
  validator.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  validator.MagicLinkRequest:
    properties:
      email:
        example: user@example.com
        type: string
    required:
    - email
    type: object
  validator.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  validator.ResetPasswordRequest:
    properties:
      password:
        example: newPassword123
        minLength: 8
        type: string
      token:
        example: reset-token-123
        type: string
    required:
    - password
    - token
    type: object
host: localhost:8080
info:
  contact: {}
  description: A secure REST API with authentication and OAuth support
  title: REST API
  version: "1.0"
paths:
  /api/v1/oauth/google:
    get:
      consumes:
      - application/json
      description: Get Google OAuth URL for authentication
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get Google OAuth URL
      tags:
      - auth
  /api/v1/oauth/google/callback:
    get:
      consumes:
      - application/json
      description: Handle Google OAuth callback and create session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Google OAuth Callback
      tags:
      - auth
  /health:
    get:
      description: Check if the server and database are healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HealthResponse'
      summary: Health check
      tags:
      - health
  /v1/forgot-password:
    post:
      consumes:
      - application/json
      description: Send password reset link to user's email
      parameters:
      - description: Email Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/validator.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Request password reset
      tags:
      - auth
  /v1/invalidate-sessions:
    post:
      description: Invalidate all user sessions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Invalidate all sessions
      tags:
      - auth
  /v1/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return session token
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/validator.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /v1/logout:
    get:
      description: Invalidate current session
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Logout user
      tags:
      - auth
  /v1/magic-link-login:
    post:
      consumes:
      - application/json
      description: Send magic link to user's email
      parameters:
      - description: Email Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/validator.MagicLinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Request magic link login
      tags:
      - auth
  /v1/profile:
    get:
      description: Get the current user's profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - Bearer: []
      summary: Get user profile
      tags:
      - profile
  /v1/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/validator.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
  /v1/reset-password:
    post:
      consumes:
      - application/json
      description: Reset user's password
      parameters:
      - description: Reset Password Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/validator.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Reset password
      tags:
      - auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
